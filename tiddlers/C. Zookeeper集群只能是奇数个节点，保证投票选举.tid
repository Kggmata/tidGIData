caption: {{||Question}}
created: 20220519124328723
difficulty: 2.4975577310234565
due: 20220915075751259
grade: 2
history: [{"due":"20220522000553268","interval":0,"difficulty":5,"stability":2,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220520000553268"},{"due":"20220528011328302","interval":2,"difficulty":5.1000000000000005,"stability":5.512139752431654,"retrievability":0.9,"grade":1,"lapses":0,"reps":2,"review":"20220522011328302"},{"due":"20220602055808555","interval":10,"difficulty":6.126014725196352,"stability":0.11806790392114878,"retrievability":0.826014725196352,"grade":0,"lapses":1,"reps":1,"review":"20220601055808555"},{"due":"20220613120444363","interval":5,"difficulty":4.337555590697732,"stability":6.678367322977588,"retrievability":0.011540865501379421,"grade":2,"lapses":1,"reps":2,"review":"20220606120444363"},{"due":"20220708023536325","interval":9,"difficulty":3.4051876976294713,"stability":23.130861422289623,"retrievability":0.867632106931739,"grade":2,"lapses":1,"reps":3,"review":"20220615023536325"}]
interval: 25
lapses: 1
modified: 20220710075751259
reps: 4
retrievability: 0.8923700333939849
review: 20220710075751259
stability: 67.46703202950009
tags: ?
title: C. Zookeeper集群只能是奇数个节点，保证投票选举
type: text/vnd.tiddlywiki

错误：ZK选举遵循过半原则，与奇偶数无关，一般从故障率角度来讲2n台和2n-1台的容错率是一样的，避免脑裂问题，选择奇数台

脑裂(split-brain)就是“大脑分裂”，也就是本来一个“大脑”被拆分了两个或多个“大脑”，我们都知道，如果一个人有多个大脑，并且相互独立的话，那么会导致人体“手舞足蹈”，“不听使唤”。

那么有一个问题我们想一下，选举的过程中为什么一定要有一个过半机制验证？
因为这样不需要等待所有zkServer都投了同一个zkServer就可以选举出来一个Leader了，这样比较快，所以叫快速领导者选举算法呗。
那么再来想一个问题，过半机制中为什么是大于，而不是大于等于呢？
这就是更脑裂问题有关系了，比如回到上文出现脑裂问题的场景：

当机房中间的网络断掉之后，机房1内的三台服务器会进行领导者选举，但是此时过半机制的条件是set.size() > 3，也就是说至少要4台zkServer才能选出来一个Leader，所以对于机房1来说它不能选出一个Leader，同样机房2也不能选出一个Leader，这种情况下整个集群当机房间的网络断掉后，整个集群将没有Leader。
而如果过半机制的条件是set.size() >= 3，那么机房1和机房2都会选出一个Leader，这样就出现了脑裂。所以我们就知道了，为什么过半机制中是大于，而不是大于等于。就是为了防止脑裂。
