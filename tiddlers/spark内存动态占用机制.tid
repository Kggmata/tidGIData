created: 20220618015227035
difficulty: 1
due: 20220923121352780
grade: 2
history: [{"due":"20220620145853568","interval":0,"difficulty":0.6469164138781576,"stability":0.10005798339843751,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220619145853568"},{"due":"20220704142631627","interval":2,"difficulty":1,"stability":13.483496769392643,"retrievability":0.12172520545485727,"grade":2,"lapses":0,"reps":2,"review":"20220621142631627"}]
interval: 17
lapses: 0
modified: 20221210005806779
modifier: Yangqing QU
reps: 3
retrievability: 0.8756064079789342
review: 20220708121352780
stability: 77.17521774511171
tags: userProfile用户画像 ?
title: spark内存动态占用机制
type: text/vnd.tiddlywiki

[img[BillfishbNYAHo2022-06-18 09_53_04.PNG]]

```
其中最重要的优化在于动态占用机制，其规则如下：
设定基本的存储内存和执行内存区域（spark.storage.storageFraction 参数），该设定确定了双方各自拥有的空间的范围
双方的空间都不足时，则存储到硬盘；若己方空间不足而对方空余时，可借用对方的空间;（存储空间不足是指不足以放下一个完整的 Block）
执行内存的空间被对方占用后，可让对方将占用的部分转存到硬盘，然后”归还”借用的空间
存储内存的空间被对方占用后，无法让对方”归还”，因为需要考虑 Shuffle 过程中的很多因素，实现起来较为复杂
```
