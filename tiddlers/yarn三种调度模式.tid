created: 20220521021103159
difficulty: 2.229344411327985
due: 20220919090816420
grade: 2
history: [{"due":"20220523083022318","interval":0,"difficulty":5,"stability":2,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220521083022318"},{"due":"20220529004517534","interval":2,"difficulty":4.1000000000000005,"stability":6.091873624375545,"retrievability":0.9,"grade":2,"lapses":0,"reps":2,"review":"20220523004517534"},{"due":"20220628135402321","interval":10,"difficulty":3.141177516867769,"stability":25.7636430941571,"retrievability":0.8411775168677682,"grade":2,"lapses":0,"reps":3,"review":"20220602135402321"}]
interval: 29
lapses: 0
modified: 20221210011901171
modifier: Yangqing QU
reps: 4
retrievability: 0.8881668944602166
review: 20220701090816419
stability: 80.25328821558121
tags: yarn(yetAnotherResourceNegotiator) ?
title: yarn三种调度模式
type: text/vnd.tiddlywiki

FIFO Scheduler 
FIFO Scheduler把应用按提交的顺序排成一个队列，这是一个先进先出队列，在进行资源分配的时候，先给队列中最头上的应用进行分配资源，待最头上的应用需求满足后再给下一个分配，以此类推。

FIFO Scheduler是最简单也是最容易理解的调度器，也不需要任何配置，但它并不适用于共享集群。大的应用可能会占用所有集群资源，这就导致其它应用被阻塞。
[img[Snipaste_2022-05-21_10-14-34.jpg]]
，Capacity Scheduler
而对于Capacity调度器，有一个专门的队列用来运行小任务，但是为小任务专门设置一个队列会预先占用一定的集群资源，这就导致大任务的执行时间会落后于使用FIFO调度器时的时间。
[img[Snipaste_2022-05-21_10-15-03.jpg]]
，FairScheduler
在Fair调度器中，我们不需要预先占用一定的系统资源，Fair调度器会为所有运行的job动态的调整系统资源。如上图所示，当第一个大job提交时，只有这一个job在运行，此时它获得了所有集群资源；当第二个小任务提交后，Fair调度器会分配一半资源给这个小任务，让这两个任务公平的共享集群资源。
[img[Snipaste_2022-05-21_10-15-17.jpg]]