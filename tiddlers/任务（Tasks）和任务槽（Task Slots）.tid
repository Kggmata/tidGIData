created: 20220716130936908
creator: Yangqing QU
difficulty: 2.2464951521155365
due: 20221221023620559
grade: 0
history: [{"due":"20220727050415710","interval":0,"difficulty":0.07897385645727227,"stability":0.10000011324882507,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220726050415710"},{"due":"20220820123321484","interval":9,"difficulty":1,"stability":16.43780488763927,"retrievability":0.00007617816609952556,"grade":1,"lapses":0,"reps":2,"review":"20220804123321484"},{"due":"20220831140907802","interval":26,"difficulty":2.0464951521155363,"stability":0.07408182272361549,"retrievability":0.846495152115536,"grade":0,"lapses":1,"reps":1,"review":"20220830140907802"}]
interval: 112
lapses: 2
modified: 20230102012832569
modifier: Yangqing QU
reps: 1
retrievability: 6.636067099109319e-70
review: 20221220023620559
stability: 1.097623272188053
tags: stream实时/flink ?
title: 任务（Tasks）和任务槽（Task Slots）
type: text/vnd.tiddlywiki

Apache Flink 是一种流处理框架，它用于处理大规模的数据流。在 Flink 中，一个任务代表一个流式计算程序的执行。Flink 会将数据流拆分成若干个任务，并在集群中的节点上运行这些任务。

任务槽是 Flink 中的一个概念，它用于控制任务的并行度。在 Flink 中，每个任务都会分配一个任务槽，表示这个任务可以并行地执行的最大数量。Flink 会根据集群中可用的资源，自动调整任务的并行度。

例如，假设你有一个 Flink 集群，包含 4 个节点，每个节点有 4 个核心。如果你的流式计算程序需要 8 个任务槽来进行处理，那么 Flink 会在 4 个节点上各运行 2 个任务，每个任务使用 2 个核心。如果你的流式计算程序需要 16 个任务槽来进行处理，那么 Flink 会在 4 个节点上各运行 4 个任务，每个任务使用 4 个核心。

通常情况下，你可以通过设置 Flink 的并行度参数来控制任务的数量。Flink 会根据你设置的并行度自动计算任务槽的数量。你也可以手动设置