created: 20220609020607316
difficulty: 1.0731304672290258
due: 20220929075516880
grade: 1
history: [{"due":"20220613140233784","interval":0,"difficulty":1.0984764469154382,"stability":0.10185546875000001,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220612140233784"},{"due":"20220701225642884","interval":3,"difficulty":1,"stability":15.531848239754114,"retrievability":0.04490366339741324,"grade":2,"lapses":0,"reps":2,"review":"20220615225642884"}]
interval: 20
lapses: 0
modified: 20230102012807708
modifier: Yangqing QU
reps: 3
retrievability: 0.8731304672290258
review: 20220706075516880
stability: 84.8538234387497
tags: stream实时/kafka ?
title: kafka架构图
type: text/vnd.tiddlywiki

[img[快速认识Kafka阶段（1）——最详细的Kafka介绍 - 云+_ef390cfa2022-06-09 10_06_37.png]]

从左到右流程架构图

[img[快速认识Kafka阶段（1）——最详细的Kafka介绍 - 云+2022-06-09 10_06_41.png]]

[img[快速认识Kafka阶段（1）——最详细的Kafka介绍 - 云+_b24a70722022-06-09 10_06_48.png]]

[img[快速认识Kafka阶段（1）——最详细的Kafka介绍 - 云+_d28ab33d2022-06-09 10_06_52.png]]

 补充说明：

kafka支持消息持久化，消费端为拉模型来拉取数据，消费状态和订阅关系有客户端负责维护，消息消费完后，不会立即删除，会保留历史消息。因此支持多订阅时，消息只会存储一份就可以了。

```
Broker：kafka集群中包含一个或者多个服务实例，这种服务实例被称为Broker
 Topic：每条发布到kafka集群的消息都有一个类别，这个类别就叫做Topic
 Partition：Partition是一个物理上的概念，每个Topic包含一个或者多个Partition
 segment：一个partition当中存在多个segment文件段，每个segment分为两部分，.log文件和.index文件，其中.index文件是索引文件，主要用于快速查询.log文件当中数据的偏移量位置
 Producer：负责发布消息到kafka的Broker中。
 Consumer：消息消费者,向kafka的broker中读取消息的客户端
 Consumer Group：每一个Consumer属于一个特定的Consumer Group（可以为每个Consumer指定 groupName）
 .log:存放数据文件
 .index：存放.log文件的索引数据
```