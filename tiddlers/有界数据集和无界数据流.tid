created: 20220612014412194
difficulty: 1
due: 20221002053948674
grade: 2
history: [{"due":"20220614124043779","interval":0,"difficulty":1.0984764469154382,"stability":0.10185546875000001,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220613124043779"},{"due":"20220702025353584","interval":3,"difficulty":1,"stability":15.531848239754114,"retrievability":0.04490366339741324,"grade":2,"lapses":0,"reps":2,"review":"20220616025353583"}]
interval: 20
lapses: 0
modified: 20230102013813601
modifier: Yangqing QU
reps: 3
retrievability: 0.8731304672290258
review: 20220706053948674
stability: 88.3647639214822
tags: spark/StructedStreaming结构化流 ?
title: 有界数据集和无界数据流
type: text/vnd.tiddlywiki

*有界数据集的概念

有界数据集指的是：

- 有界：数据有明确的边界，也就是有`明确的开始`，和`明确的结束`
- 数据集：就是指满足有界概念的一个数据集合体

有界数据集：一份数据集，数据有明确的开始和结束



最典型的有界数据集：`文件`，还有：

- HBase的region
- kafka的本地存储
- kafka的log
- python的字典list



对于有界数据集进行的计算，我们一般称之为：`离线计算、离线批处理`



*无界数据流的概念

无界数据流的概念：

- 无界：有`明确的开始`，没有`明确的结束`
- 数据流：`源源不断`（新数据的产生）

无界数据流：有明确的开始，没有明确的结束的一个数据流（会源源不断产生新数据）



> 陌陌案例中，数据模拟器程序，就是一个产生无界数据流的程序。
>
> 模拟器产生的数据有`明确的开始`：指的就是第一条被模拟出来的数据
>
> 没有明确的结束：程序是持续运行，只要不停就会继续模拟数据
>
> 同时满足数据流的定义：数据是源源不断产生的



对无界数据流进行计算，我们一般称之为：`实时计算、流计算`

> 在陌陌案例中：
>
> - 数据模拟器
> - Flume采集
> - Kafka中转
> - Python程序读取kafka，写入HBase
>
> 都是流计算
>
> 真正的流计算的程序，都满足一个特点：程序一旦启动就不会主动停止，因为数据是无边界的，计算也要持续进行

> 在陌陌案例中，Phoenix查询HBase严格来说不是流计算，而是批处理
>
> - 当你查询的`那一刻`，数据的`边界被确定了`
> - 当你二次、三次查询......数据的边界会重新划定
> - 所以单次查询，就是批处理（离线计算）
>
> 尽管数据是源源不断写入HBase，但是查询的那一瞬间，被查询的边界确定了。
>
> 这种类型的我们一般称之为`OLAP在线(实时)查询`，实时查询（数据是实时增加的，查询是批处理）



*总结

流计算：对`源源不断`产生的数据，进行`持续的`，`不停的`计算。

