created: 20220728025244148
modified: 20230102012832558
modifier: Yangqing QU
tags: ? stream实时/flink
title: doris物化视图
type: text/vnd.tiddlywiki

```
物化视图是将预先计算（根据定义好的 SELECT 语句）好的数据集，存储在 Doris 中的一个特殊的表。

物化视图的出现主要是为了满足用户，既能对原始明细数据的任意维度分析，也能快速的对固定维度进行分析查询。

首先，什么是物化视图？
从定义上来说，就是包含了查询结果的数据库对象，可能是对远程数据的本地Copy；也可能是一个表或多表Join后结果的行或列的子集；也可能是聚合后的结果。说白了，就是预先存储查询结果的一种数据库对象。

物化视图会自动处理当前的存量数据和新到达的增量数据, 保证和base表的数据一致性.
```
```
4.13.1 	适用场景
	分析需求覆盖明细数据查询以及固定维度查询两方面。
	查询仅涉及表中的很小一部分列或行。
	查询包含一些耗时处理操作，比如：时间很久的聚合操作等。
	查询需要匹配不同前缀索引。

```
```
4.13.2 	优势
	对于那些经常重复的使用相同的子查询结果的查询性能大幅提升。
	Doris自动维护物化视图的数据，无论是新的导入，还是删除操作都能保证base 表和物化视图表的数据一致性。无需任何额外的人工维护成本。
	查询时，会自动匹配到最优物化视图，并直接从物化视图中读取数据。
	自动维护物化视图的数据会造成一些维护开销，会在后面的物化视图的局限性中展开说明。

```
```
在没有物化视图功能之前，用户一般都是使用 Rollup 功能通过预聚合方式提升查询效率的。但是 Rollup 具有一定的局限性，他不能基于明细模型做预聚合。
物化视图则在覆盖了 Rollup 的功能的同时，还能支持更丰富的聚合函数。所以物化视图其实是 Rollup 的一个超集。
也就是说，之前 ALTER TABLE ADD ROLLUP 语法支持的功能现在均可以通过 CREATE MATERIALIZED VIEW 实现。

```
```
4.13.4.1 	创建物化视图
这里首先你要根据你的查询语句的特点来决定创建一个什么样的物化视图。这里并不是说你的物化视图定义和你的某个查询语句一模一样就最好。这里有两个原则：
	从查询语句中抽象出，多个查询共有的分组和聚合方式作为物化视图的定义。
	不需要给所有维度组合都创建物化视图。
首先第一个点，一个物化视图如果抽象出来，并且多个查询都可以匹配到这张物化视图。这种物化视图效果最好。因为物化视图的维护本身也需要消耗资源。
如果物化视图只和某个特殊的查询很贴合，而其他查询均用不到这个物化视图。则会导致这张物化视图的性价比不高，既占用了集群的存储资源，还不能为更多的查询服务。
所以用户需要结合自己的查询语句，以及数据维度信息去抽象出一些物化视图的定义。
第二点就是，在实际的分析查询中，并不会覆盖到所有的维度分析。所以给常用的维度组合创建物化视图即可，从而到达一个空间和时间上的平衡。
通过下面命令就可以创建物化视图了。创建物化视图是一个异步的操作，也就是说用户成功提交创建任务后，Doris 会在后台对存量的数据进行计算，直到创建成功。
CREATE MATERIALIZED VIEW
具体的语法可以通过下面命令查看：
HELP CREATE MATERIALIZED VIEW

```
```
4.13.4.2 	支持聚合函数
目前物化视图创建语句支持的聚合函数有：
	SUM, MIN, MAX (Version 0.12)
	COUNT, BITMAP_UNION, HLL_UNION (Version 0.13)
	BITMAP_UNION 的形式必须为：BITMAP_UNION(TO_BITMAP(COLUMN))  column 列的类型只能是整数（largeint也不支持), 或者 BITMAP_UNION(COLUMN) 且 base 表为 AGG 模型。
	HLL_UNION 的形式必须为：HLL_UNION(HLL_HASH(COLUMN))  column 列的类型不能是 DECIMAL , 或者 HLL_UNION(COLUMN) 且 base 表为 AGG 模型

```
```
使用限制：
	DML：delete
使用物化视图功能后，由于物化视图实际上是损失了部分维度数据的。所以对表的 DML类型操作会有一些限制。
例如：如果表的物化视图Key中不包含删除语句中的条件列，则删除语句不能执行。如果想要删除渠道为APP端的数据，由于存在一个物化视图并不包含渠道这个字段，则这个删除不能执行，因为删除在物化视图中无法被执行。这时候你只能把物化视图先删除，然后删除完数据后，重新构建一个新的物化视图。 未来还会支持构建年表、月表，会用的到 to_mouth 和 to_day 函数。

```