created: 20220611062710907
difficulty: 1
due: 20220928103151559
grade: 2
history: [{"due":"20220614110709039","interval":0,"difficulty":1.0984764469154382,"stability":0.10185546875000001,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220613110709039"},{"due":"20220702024556287","interval":3,"difficulty":1,"stability":15.531848239754114,"retrievability":0.04490366339741324,"grade":2,"lapses":0,"reps":2,"review":"20220616024556286"}]
interval: 19
lapses: 0
modified: 20220705103151559
reps: 3
retrievability: 0.8790734948134195
review: 20220705103151559
stability: 84.74278121619727
tags: kafka ?
title: 消费者的数据均衡
type: text/vnd.tiddlywiki

*消费者组

我们的程序在启动的时候，可以告知自己是哪一个消费者组

这是主动的行为（你自己设置，爱去哪个组就去哪个组）

*结论

==Kakfa的`一个分区` 只能给 `一个消费者组` 的 `一个消费者` 提供数据==

> 1个消费者的界定单元：最小到线程

反过来：

`一个消费者可以消费1个或多个分区的数据`

*场景1

假设有一个Python程序，将自己标记为：group1组，开启了4个线程

[img[20220611120139.png]][img[20220611115156.png]]

*注意

```
在企业内，消费kafka的时候，一定要注意消费者组，不要和别人使用的组是同名的。

一旦和别人用的组是同名的，那么你们消费同一个topic的时候：

- 要么没数据，在当前组内，分区已经被抢占完了
- 要么回分流别人的数据
```



> 一般情况下，不同部门使用的Topic都不一样。
>
> 又或者
>
> 不同部门，甚至都不用同一个Kafka集群

*总结

```
1. Kafka的分区数，决定了一个组的并行消费数

   如果24个分区，一个组内最多也就24个并行消费，第25个没数据

   分区数可以基于CPU的能力多给点，一般是CPU核心的1~10倍之内

2. 一个分区，只给1个组，的一个消费者提供数据

   如果多个组的话，分区可以给多个组的消费者提供数据，但是多个消费者之间一定不是一个组的

3. 一个消费者可以消费多个分区（从分区的视角看，满足给一个组的一个消费者提供数据的前提）
```

