created: 20220716122118376
creator: Yangqing QU
difficulty: 1
due: 20220828045844573
grade: 1
history: [{"due":"20220724094211850","interval":0,"difficulty":0.0866458138005247,"stability":0.10000011324882507,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220723094211850"},{"due":"20220803092520818","interval":10,"difficulty":1,"stability":0.07408184304237006,"retrievability":0.000026561715818525218,"grade":0,"lapses":1,"reps":1,"review":"20220802092520818"},{"due":"20220809110035595","interval":6,"difficulty":1.2001968031069898,"stability":0.054881164580531924,"retrievability":0.00019680310698987739,"grade":0,"lapses":2,"reps":1,"review":"20220808110035595"},{"due":"20220814113836183","interval":5,"difficulty":1.40026460173154,"stability":0.040656966333775045,"retrievability":0.00006779862455024804,"grade":0,"lapses":3,"reps":1,"review":"20220813113836183"}]
interval: 7
lapses: 3
modified: 20230102012832570
modifier: Yangqing QU
reps: 2
retrievability: 1.32382762586235e-8
review: 20220820045844572
stability: 7.994071428642354
tags: stream实时/flink
title: 基于DataStreamAPI编程
type: text/vnd.tiddlywiki

```
from pyflink.common import Types
from pyflink.datastream import StreamExecutionEnvironment, RuntimeExecutionMode

def word_count():
    # 1. 创建流式处理环境
    env = StreamExecutionEnvironment.get_execution_environment()
    env.set_runtime_mode(RuntimeExecutionMode.BATCH)
    # write all the data to one file
    env.set_parallelism(1)

    # 3. 将source添加到环境中，环境会生成一个datastream，也就是我们进行操作的数据类
    ds = env.read_text_file("D:\workspace\pyflink_study\data\input\wordcount.txt")

    # 4. transform
    def split(line):
        yield from line.split(",")

    # compute word count
    ds = ds.flat_map(split) \
        .map(lambda i: (i, 1), output_type=Types.TUPLE([Types.STRING(), Types.INT()])) \
        .key_by(lambda i: i[0]) \
        .reduce(lambda i, j: (i[0], i[1] + j[1]))

    # 5. sink
    ds.print()

    # 6. 真正执行代码
    env.execute("word_count")

if __name__ == '__main__':
    word_count()
```
```
env.set_runtime_mode(RuntimeExecutionMode.STREAMING)：以流的方式执行作业
env.set_runtime_mode(RuntimeExecutionMode.BATCH)：以批的方式执行作业

数据源是来自于一个文件。文件是有界数据集还是无界数据流？有界数据集

因为文件的数据是有界的，因此不管是设置运行模式是流还是批，作业执行结束，即停止！
```
[img[image-20220715103433850.png]]