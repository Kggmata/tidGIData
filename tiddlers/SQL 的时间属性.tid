created: 20220717063922620
difficulty: 1
due: 20230110150618983
grade: 2
history: [{"due":"20220727142304209","interval":0,"difficulty":0.0720454596653259,"stability":0.10000005662441254,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220726142304209"},{"due":"20220820134259329","interval":9,"difficulty":1,"stability":16.43779744064624,"retrievability":0.00007617775707182952,"grade":1,"lapses":0,"reps":2,"review":"20220804134259329"}]
interval: 31
lapses: 0
modified: 20220904150618983
reps: 3
retrievability: 0.8197965116577113
review: 20220904150618983
stability: 127.68971336327105
tags: ?
title: SQL 的时间属性
type: text/vnd.tiddlywiki

```
先看一下本节整体的思路：
	与离线处理中常见的时间分区字段一样，在实时处理中，时间属性也是一个核心概念。Flink 支持 处理时间、事件时间、摄入时间 三种时间语义。
	分别介绍三种时间语义的应用场景及案例。三种时间在生产环境的使用频次 事件时间（SQL 常用） > 处理时间（SQL 几乎不用，DataStream 少用） > 摄入时间（不用）
```
1.5.1 	Flink 三种时间属性简介
[img[BillfishVDNzpu2022-07-17 14_39_51.PNG]]

```
	事件时间：指的是数据本身携带的时间，这个时间是在事件产生时的时间，而且在 Flink SQL 触发计算时，也使用数据本身携带的时间。这就叫做 事件时间。目前生产环境中用的最多。
	处理时间：指的是具体算子计算数据执行时的机器时间（例如在算子中 Java 取 System.currentTimeMillis()) ），在生产环境中用的次多。
	摄入时间：指的是数据从数据源进入 Flink 的时间。摄入时间用的最少，可以说基本不使用。
要注意到：
	上述的三种时间概念不是由于有了数据而诞生的，而是有了 Flink 之后根据实际的应用场景而诞生的。以事件时间举个例子，如果只是数据携带了时间，Flink 也消费了这个数据，但是在 Flink 中没有使用数据的这个时间作为计算的触发条件，也不能把这个 Flink 任务叫做事件时间的任务。
	其次，要认识到，一般一个 Flink 任务只会有一个时间属性，所以时间属性通常认为是一个任务粒度的。举例：我们可以说 A 任务是事件时间语义的任务，B 任务是处理时间语义的任务。当然了，一个任务也可以存在多个时间属性。

```
