created: 20220716122421817
creator: Yangqing QU
difficulty: 1
due: 20220829120420517
grade: 1
history: [{"due":"20220725072621347","interval":0,"difficulty":0.07897385645727227,"stability":0.10000011324882507,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220724072621347"},{"due":"20220803121415512","interval":9,"difficulty":1,"stability":0.07408184304237006,"retrievability":0.00007617816609952556,"grade":0,"lapses":1,"reps":1,"review":"20220802121415512"},{"due":"20220809110815582","interval":6,"difficulty":1.2001968031069898,"stability":0.054881164580531924,"retrievability":0.00019680310698987739,"grade":0,"lapses":2,"reps":1,"review":"20220808110815582"},{"due":"20220815081946180","interval":6,"difficulty":1.4002067449078552,"stability":0.040656966333775045,"retrievability":0.000009941800865523385,"grade":0,"lapses":3,"reps":1,"review":"20220814081946179"}]
interval: 7
lapses: 3
modified: 20221217134813117
modifier: Yangqing QU
reps: 2
retrievability: 1.32382762586235e-8
review: 20220821120420517
stability: 7.994071428642354
tags: flink
title: flink基于SQL编程
type: text/vnd.tiddlywiki

```
from pyflink.table import (EnvironmentSettings, TableEnvironment)

if __name__ == '__main__':
    # 1. 创建流式处理环境
    settings = EnvironmentSettings.new_instance().in_batch_mode().build()
    t_env = TableEnvironment.create(settings)

    # 2. 设置并行度
    t_env.get_config().get_configuration().set_string("parallelism.default", "1")

    source_ddl = """
                        CREATE TABLE file_source (
                            `userid` STRING,
                            `timestamp` BIGINT,
                            `money` DOUBLE,
                            `category` STRING
                        ) WITH (
                            'connector' = 'filesystem',
                            'path' = 'file:///D:/workspace/pyflink_study/data/input/order.csv',
                            'format' = 'csv'
                        )
                        """

    sink_ddl = """
                      CREATE TABLE print_sink (
                        `userid` STRING,
                        `category` STRING,
                        `totalmoney` DOUBLE
                    ) WITH (
                      'connector' = 'print'
                    )
            """

    # 注册source和sink
    t_env.execute_sql(source_ddl)
    t_env.execute_sql(sink_ddl)

    # 5.打印测试
    t_env.execute_sql("""
                INSERT INTO print_sink
                SELECT `userid`, `category`, sum(`money`) AS `totalmoney`
                FROM file_source
                GROUP BY `userid`, `category`
            """).wait()
```