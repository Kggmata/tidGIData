created: 20220623004527375
difficulty: 1.3742188027487898
due: 20221005023518502
grade: 1
history: [{"due":"20220625132648322","interval":0,"difficulty":0.4015068894836844,"stability":0.1000072479248047,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220624132648322"},{"due":"20220709061645251","interval":2,"difficulty":1,"stability":13.480992008275221,"retrievability":0.12159522294586199,"grade":1,"lapses":0,"reps":2,"review":"20220626061645250"},{"due":"20220711132549456","interval":14,"difficulty":2.096356723988689,"stability":0.07408215765534414,"retrievability":0.8963567239886889,"grade":0,"lapses":1,"reps":1,"review":"20220710132549456"},{"due":"20220722112308241","interval":2,"difficulty":1.3545245138926452,"stability":9.538541296888152,"retrievability":0.058167789903956296,"grade":1,"lapses":1,"reps":2,"review":"20220712112308241"}]
interval: 18
lapses: 1
modified: 20221210005806781
modifier: Yangqing QU
reps: 3
retrievability: 0.8196942888561446
review: 20220730023518502
stability: 67.19503177895115
tags: userProfile用户画像 ?
title: 一致性有什么
type: text/vnd.tiddlywiki

https://blog.csdn.net/Soinice/article/details/97614793

一致性、强一致性，弱一致性，顺序一致性，最终一致性

一致性（Consistency）

```
是指多副本（Replications）问题中的数据一致性。可以分为强一致性、顺序一致性与弱一致性。
```

强一致性（Strict Consistency）

```
系统中的某个数据被成功更新后，后续任何对该数据的读取操作都将得到更新后的值；

也称为：原子一致性（Atomic Consistency）线性一致性（Linearizable Consistency）
```

两个要求：

```
任何一次读都能读到某个数据的最近一次写的数据。
系统中的所有进程，看到的操作顺序，都和全局时钟下的顺序一致。
简言之，在任意时刻，所有节点中的数据是一样的。

例如，对于关系型数据库，要求更新过的数据能被后续的访问都能看到，这是强一致性。
```

总结：

```
一个集群需要对外部提供强一致性，所以只要集群内部某一台服务器的数据发生了改变，那么就需要等待集群内其他服务器的数据同步完成后，才能正常的对外提供服务。
保证了强一致性，务必会损耗可用性。
顺序一致性（Sequential Consistency）
两个要求：

任何一次读都能读到某个数据的最近一次写的数据。
系统的所有进程的顺序一致，而且是合理的。即不需要和全局时钟下的顺序一致，错的话一起错，对的话一起对。
弱一致性
系统中的某个数据被更新后，后续对该数据的读取操作可能得到更新后的值，也可能是更改前的值。

但即使过了“不一致时间窗口”这段时间后，后续对该数据的读取也不一定是最新之；

所以说，可以理解为数据更新后，如果能容忍后续的访问只能访问到部分或者全部访问不到，则是弱一致性。
```

最终一致性

```
是弱一致性的特殊形式，存储系统保证在没有新的更新的条件下，最终所有的访问都是最后更新的值。

不保证在任意时刻任意节点上的同一份数据都是相同的，但是随着时间的迁移，不同节点上的同一份数据总是在向趋同的方向变化。

简单说，就是在一段时间后，节点间的数据会最终达到一致状态。
```

弱一致性与最终一致性区别

```
弱一致性即使过了不一致时间窗口，后续的读取也不一定能保证一致，而最终一致过了不一致窗口后，后续的读取一定一致，才能说清楚弱一致和最终一致的区别
```
[img[(48条消息) 分布式架构之Consistency（一致性、强一2022-06-23 08_54_15.png]]