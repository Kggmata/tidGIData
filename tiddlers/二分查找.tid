created: 20220525230511637
difficulty: 1
due: 20220915150645739
grade: 2
history: [{"due":"20220531130119950","interval":0,"difficulty":2.4476805400532036,"stability":0.159375,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220530130119950"},{"due":"20220621143632402","interval":3,"difficulty":1,"stability":19.05775353020881,"retrievability":0.13762030962938637,"grade":2,"lapses":0,"reps":2,"review":"20220602143632402"}]
interval: 19
lapses: 0
modified: 20221210012019243
modifier: Yangqing QU
reps: 3
retrievability: 0.9002874064837764
review: 20220621150645739
stability: 85.55303743418845
tags: dataStructure数据结构 ?
title: 二分查找
type: text/vnd.tiddlywiki

`def binary_search(search_list, search_value):
    left = 0
    right = len(search_list) - 1
    while left <= right:
        mid = (left + right) // 2
        if search_value > search_list[mid]:
            left = mid + 1
        elif search_value < search_list[mid]:
            right = mid - 1
        else:
            return mid
    else:
        return None


list = [(i * 5 + 1) for i in range(10)]
list.sort()
print(binary_search(list, 16))`