created: 20220709111432370
difficulty: 1
due: 20221025112039635
grade: 2
history: [{"due":"20220713030333858","interval":0,"difficulty":0.11508963897169677,"stability":0.1000004529953003,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220712030333857"},{"due":"20220721013247913","interval":8,"difficulty":1,"stability":0.07408215765534414,"retrievability":0.00021848284249889474,"grade":0,"lapses":1,"reps":1,"review":"20220720013247912"},{"due":"20220810091002772","interval":8,"difficulty":1,"stability":12.927205658998126,"retrievability":0.000011448016640964715,"grade":1,"lapses":1,"reps":2,"review":"20220728091002772"}]
interval: 16
lapses: 1
modified: 20220813112039635
reps: 3
retrievability: 0.8777401461041092
review: 20220813112039635
stability: 73.38575036345073
tags: 用户画像 ?
title: 哈希冲突解决方案
type: text/vnd.tiddlywiki

[img[Snipaste_2022-07-09_19-14-22.jpg]]

开放地址法

```
如果hash返回的位置有值, 向后探测新位置

线性探测 i+1 , i+2

二次探测 i+1^2, i-1^2, i+2^2, i-2^2...

二度探测 多个hash函数, 第一个发生冲突, 使用h2, h3
```

链地址法

[img[Snipaste_2022-07-13_12-11-19.jpg]]

```
发生冲突, 加到对应位置的链表
```