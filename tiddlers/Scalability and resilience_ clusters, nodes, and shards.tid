created: 20220619092817125
difficulty: 1.0687910512583556
due: 20220926035053914
grade: 1
history: [{"due":"20220621014715149","interval":0,"difficulty":0.5718632935728973,"stability":0.10005798339843751,"retrievability":1,"grade":-1,"lapses":0,"reps":1,"review":"20220620014715149"},{"due":"20220705132834170","interval":2,"difficulty":1,"stability":13.483496769392643,"retrievability":0.12172520545485727,"grade":1,"lapses":0,"reps":2,"review":"20220622132834169"}]
interval: 18
lapses: 0
modified: 20220710035053914
reps: 3
retrievability: 0.8687910512583555
review: 20220710035053914
stability: 77.83147630042302
tags: 用户画像 ?
title: Scalability and resilience: clusters, nodes, and shards
type: text/vnd.tiddlywiki

How does this work? 

Under the covers, an Elasticsearch index is really just a logical grouping of one or more physical shards, where each shard is actually a ''self-contained index.'' By distributing the documents in an index across multiple shards, and distributing those shards across multiple nodes, Elasticsearch can ensure redundancy, which both protects against hardware failures and increases query capacity as nodes are added to a cluster. As the cluster grows (or shrinks), Elasticsearch automatically migrates shards to rebalance the cluster.